require 'sudo'

class HostsUpdater

  DEFAULT_OPTIONS = {
    :hosts_file => '/etc/hosts',
    :hosts_directory => '/etc/hosts.d/',
    :hosts_auto_name => 'hosts.auto',
    :hosts_custom_name => 'hosts.custom',
    :hosts_whitelist_name => 'hosts.whitelist',
    :update => true,
    :verbose => true # For development purposes
  }

  SOURCES = {
    :mdl => ['Malware Domain List', 'http://www.malwaredomainlist.com/hostslist/hosts.txt'],
    :mvps => ['MVPS Hosts', 'http://winhelp2002.mvps.org/hosts.txt'],
    :swc => ["Dan Pollock's List", 'http://someonewhocares.org/hosts/hosts'],
    :yoyo => ["Peter Lowe's Ad Server List", 'http://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&mimetype=plaintext']
  }

  def initialize(options = {})
    @options = DEFAULT_OPTIONS.merge(options)
  end

  def run
    bootstrap
    update_auto_file if @options[:update]
  end

  private

  def log(message)
    puts message if @options[:verbose]
  end

  # Create /etc/hosts.d and files inside.
  # If /etc/hosts.d/hosts.custom does not exists then it will copy content of /etc/hosts there.
  def bootstrap
    unless Dir.exists? @options[:hosts_directory]
      log "Creating configuration directory at #{@options[:hosts_directory]}"
      sudo[FileUtils].mkdir_p @options[:hosts_directory]
    end

    unless File.exists? hosts_custom_location
      log "Copying #{@options[:hosts_file]} to #{hosts_custom_location}"
      sudo[File].write(hosts_custom_location, File.read(@options[:hosts_file]))
    end

    unless File.exists? hosts_auto_location
      log "Writing default #{hosts_auto_location}"
      sudo[File].write(hosts_auto_location, HOSTS_AUTO_HEADER)
    end

    unless File.exists? hosts_whitelist_location
      log "Writing default #{hosts_whitelist_location}"
      sudo[File].write(hosts_whitelist_location, HOSTS_WHITELIST_HEADER)
    end
  end

  def update_auto_file
  end

  def sudo
    return @sudo if defined?(@sudo)
    @sudo = Sudo::Wrapper.new
    @sudo.start!
    @sudo
  end

  def hosts_auto_location
    @options[:hosts_directory] + @options[:hosts_auto_name]
  end
  HOSTS_AUTO_HEADER = "# This file was auto-generated by hosts-updater.\n# Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\n"

  def hosts_custom_location
    @options[:hosts_directory] + @options[:hosts_custom_name]
  end

  def hosts_whitelist_location
    @options[:hosts_directory] + @options[:hosts_whitelist_name]
  end
  HOSTS_WHITELIST_HEADER = "# List domains that should be ignored here.\n# One domain per line, lines starting with # will be ignored.\n"

end
